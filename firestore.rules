rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Admins can read/write their own collection
    match /admins/{adminId} {
      allow read, write: if request.auth.uid == adminId && isAdmin();
    }

    // Buyers can manage their own documents
    match /buyers/{buyerId} {
      allow read: if true;
      // ONLY the user can create/update their own buyer profile. Admins cannot.
      allow write: if request.auth.uid == buyerId;
    }

    // Sellers can manage their own documents
    match /sellers/{sellerId} {
      allow read: if true;
      // ONLY the seller can create/update their own profile. Admins cannot.
      allow write: if request.auth.uid == sellerId;
    }

    // Sellers can manage their own products
    match /products/{productId} {
      allow read: if true;
      // ONLY the product's seller can write to it. Admins cannot.
      allow create, update, delete: if request.auth.uid == request.resource.data.sellerId;
    }

    // Rules for quote requests and contact messages
    match /quote-requests/{requestId} {
      // Any authenticated user can create a request.
      allow create: if request.auth != null;
      // Only an admin can read all requests.
      // Sellers can read requests sent to them.
      allow read: if request.auth != null && (isAdmin() || resource.data.sellerId == request.auth.uid);
      // Only sellers can mark their requests as read.
      allow update: if request.auth != null && resource.data.sellerId == request.auth.uid;
    }

    match /contact-messages/{messageId} {
      // Anyone can send a message.
      allow create: if true;
      // Only admins can read messages.
      allow read: if request.auth != null && isAdmin();
    }
  }
}
